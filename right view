#include<bits/stdc++.h>
using namespace std;


struct node{
    int data;
    node* left,*right;
    node(int val){
data = val;
left=NULL;
right = NULL;
    }
};
node* insert(node*root,int val){
if(root==NULL){
return new node(val);
}
if(val<root->data){
    root->left = insert(root->left,val);
}
else{
    root->right = insert(root->right,val);
}
return root;
}

void levelorder(node* root){
    if(root==NULL){
       return;
    }
    queue<node*> q;
    q.push(root);

    while(!q.empty()){
        int n = q.size();  
        for(int i=1; i<=n; i++){
            node *current = q.front();
             q.pop();
             if(i==n){
             cout<<current->data;
             }
             if(current->left !=NULL){
               q.push(current->left);
             }
             if(current->right!=NULL){
               q.push(current->right);
             }
     
        }
    }
}
    

int main(){
int n;
cin>>n;
int k;
node* root=NULL;
for(int i=0; i<n; i++){
cin>>k;
root = insert(root,k);
}
levelorder(root);

    return 0;
}
/*
              10
             /  
            8   
           /  
          7
         /\
        3
        \
         6  

          
 */
//input
//10 8 7  3 6
//output
//left view 10 8 7 3 6
